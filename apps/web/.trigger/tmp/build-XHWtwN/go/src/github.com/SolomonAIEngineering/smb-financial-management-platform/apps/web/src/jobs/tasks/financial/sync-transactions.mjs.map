{
  "version": 3,
  "sources": ["../../../../../../../../../../../../../../src/jobs/tasks/financial/sync-transactions.ts"],
  "sourcesContent": ["import { client } from '@/jobs/client';\nimport { cronTrigger } from '@trigger.dev/sdk';\n\n/** This job syncs bank transactions daily at midnight */\nclient.defineJob({\n  id: 'sync-bank-transactions',\n  name: 'Sync Bank Transactions',\n  version: '0.0.1',\n  trigger: cronTrigger({\n    cron: '0 0 * * *', // Run at midnight every day\n  }),\n  run: async (payload, io, ctx) => {\n    await io.logger.info('Starting bank transaction sync', {\n      timestamp: new Date().toISOString(),\n    });\n\n    // Here you would add code to:\n    // 1. Fetch all active bank connections\n    // 2. For each connection, call the Plaid API to get new transactions\n    // 3. Store the transactions in your database\n    // 4. Update last sync timestamps\n\n    await io.logger.info('Bank transaction sync completed', {\n      timestamp: new Date().toISOString(),\n    });\n\n    return {\n      message: 'Bank transaction sync completed successfully',\n      timestamp: new Date().toISOString(),\n    };\n  },\n});\n"],
  "mappings": ";;;;;;;;;;AAAA;AAIA,OAAO,UAAU;AAAA,EACf,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,SAAS;AAAA,EACT,SAAS,YAAY;AAAA,IACnB,MAAM;AAAA;AAAA,EACR,CAAC;AAAA,EACD,KAAK,OAAO,SAAS,IAAI,QAAQ;AAC/B,UAAM,GAAG,OAAO,KAAK,kCAAkC;AAAA,MACrD,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,IACpC,CAAC;AAQD,UAAM,GAAG,OAAO,KAAK,mCAAmC;AAAA,MACtD,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,IACpC,CAAC;AAED,WAAO;AAAA,MACL,SAAS;AAAA,MACT,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,IACpC;AAAA,EACF;AACF,CAAC;",
  "names": []
}
