{
  "version": 3,
  "sources": ["../../../../../../../../../../../../../../../src/jobs/tasks/bank/notifications/expiring.ts"],
  "sourcesContent": ["import { eventTrigger } from '@trigger.dev/sdk';\n\nimport { prisma } from '@/server/db';\n\nimport { client } from '../../../client';\n\n/**\n * This job sends notifications to users about bank connections that are\n * approaching their expiration date and need attention\n */\nexport const expiringNotificationsJob = client.defineJob({\n  id: 'expiring-notifications-job',\n  name: 'Send Expiring Connection Notifications',\n  trigger: eventTrigger({\n    name: 'expiring-notification',\n  }),\n  version: '1.0.0',\n  run: async (payload, io) => {\n    const {\n      accountCount,\n      connectionId,\n      daysInactive,\n      daysUntilExpiry,\n      email,\n      institutionName,\n      name,\n      userId,\n    } = payload;\n\n    await io.logger.info(\n      `Sending expiring connection notification for ${connectionId}`\n    );\n\n    try {\n      // Send email notification\n      await io.runTask('send-expiring-email', async () => {\n        await client.sendEvent({\n          name: 'send-email',\n          payload: {\n            subject: `Action Required: Your ${institutionName} Connection Will Expire Soon`,\n            template: 'connection-expiring',\n            templateData: {\n              accountCount,\n              daysInactive,\n              daysUntilExpiry,\n              institutionName,\n              name: name || 'there',\n              reconnectUrl: `https://yourdomain.com/app/accounts/reconnect/${connectionId}`,\n            },\n            to: email,\n          },\n        });\n      });\n\n      // Record this notification\n      await prisma.notification.create({\n        data: {\n          body: `Your connection to ${institutionName} will expire in ${daysUntilExpiry} days if not used. Please reconnect to maintain access.`,\n          metadata: {\n            connectionId,\n            daysUntilExpiry,\n          },\n          read: false,\n          title: `${institutionName} connection expiring soon`,\n          type: 'CONNECTION_EXPIRING',\n          userId,\n        },\n      });\n\n      // Generate the email content\n      const emailText = generateExpiringEmailText({\n        accountCount,\n        daysInactive,\n        daysUntilExpiry,\n        institutionName,\n        name: name || 'there',\n      });\n\n      const emailHtml = generateExpiringEmailHtml({\n        accountCount,\n        daysInactive,\n        daysUntilExpiry,\n        institutionName,\n        name: name || 'there',\n        reconnectUrl: `https://yourdomain.com/app/accounts/reconnect/${connectionId}`,\n      });\n\n      await io.logger.info(\n        `Expiring notification sent for ${institutionName} connection`\n      );\n\n      return {\n        connectionId,\n        emailHtml,\n        emailText,\n        status: 'success',\n      };\n    } catch (error) {\n      const errorMessage =\n        error instanceof Error ? error.message : String(error);\n      await io.logger.error(\n        `Failed to send expiring notification: ${errorMessage}`\n      );\n\n      throw error;\n    }\n  },\n});\n\n/** Generate plain text email content */\nfunction generateExpiringEmailText({\n  accountCount,\n  daysInactive,\n  daysUntilExpiry,\n  institutionName,\n  name,\n}: {\n  accountCount: number;\n  daysInactive: number;\n  daysUntilExpiry: number;\n  institutionName: string;\n  name: string;\n}): string {\n  return `\nHello ${name},\n\nWe've noticed that your connection to ${institutionName} has been inactive for ${daysInactive} days and will expire in approximately ${daysUntilExpiry} days if not used.\n\nWhen a connection expires, we'll no longer be able to update your account information and transactions, which may affect your financial tracking and insights.\n\nThis connection provides data for ${accountCount} account${accountCount !== 1 ? 's' : ''} in your profile.\n\nTo prevent expiration, please log in to your dashboard and use your ${institutionName} accounts, or reconnect them if needed.\n\nThank you for using our service!\n`;\n}\n\n/** Generate HTML email content */\nfunction generateExpiringEmailHtml({\n  accountCount,\n  daysInactive,\n  daysUntilExpiry,\n  institutionName,\n  name,\n  reconnectUrl,\n}: {\n  accountCount: number;\n  daysInactive: number;\n  daysUntilExpiry: number;\n  institutionName: string;\n  name: string;\n  reconnectUrl: string;\n}): string {\n  return `\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <style>\n        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n        .container { max-width: 600px; margin: 0 auto; padding: 20px; }\n        .header { background-color: #f5f5f5; padding: 20px; border-bottom: 2px solid #ddd; }\n        .content { padding: 20px; }\n        .warning { color: #e65100; font-weight: bold; }\n        .button { display: inline-block; background-color: #4CAF50; color: white; padding: 12px 20px; \n                  text-decoration: none; border-radius: 4px; margin-top: 20px; }\n        .footer { margin-top: 30px; font-size: 12px; color: #777; }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\">\n            <h2>Connection Expiring Soon</h2>\n        </div>\n        <div class=\"content\">\n            <p>Hello ${name},</p>\n            \n            <p>We've noticed that your connection to <strong>${institutionName}</strong> has been inactive for \n            <strong>${daysInactive} days</strong> and will expire in approximately \n            <span class=\"warning\">${daysUntilExpiry} days</span> if not used.</p>\n            \n            <p>When a connection expires, we'll no longer be able to update your account information and \n            transactions, which may affect your financial tracking and insights.</p>\n            \n            <p>This connection provides data for <strong>${accountCount} account${accountCount !== 1 ? 's' : ''}</strong> in your profile.</p>\n            \n            <p>To prevent expiration, please log in to your dashboard and use your ${institutionName} \n            accounts, or reconnect them if needed.</p>\n            \n            <a href=\"${reconnectUrl}\" class=\"button\">Reconnect Now</a>\n            \n            <p>Thank you for using our service!</p>\n        </div>\n        <div class=\"footer\">\n            <p>If you have any questions, please contact our support team.</p>\n        </div>\n    </div>\n</body>\n</html>\n`;\n}\n"],
  "mappings": ";;;;;;;;;;;;;AAAA;AAUO,IAAM,2BAA2B,OAAO,UAAU;AAAA,EACvD,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,SAAS,aAAa;AAAA,IACpB,MAAM;AAAA,EACR,CAAC;AAAA,EACD,SAAS;AAAA,EACT,KAAK,OAAO,SAAS,OAAO;AAC1B,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AAEJ,UAAM,GAAG,OAAO;AAAA,MACd,gDAAgD,YAAY;AAAA,IAC9D;AAEA,QAAI;AAEF,YAAM,GAAG,QAAQ,uBAAuB,YAAY;AAClD,cAAM,OAAO,UAAU;AAAA,UACrB,MAAM;AAAA,UACN,SAAS;AAAA,YACP,SAAS,yBAAyB,eAAe;AAAA,YACjD,UAAU;AAAA,YACV,cAAc;AAAA,cACZ;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA,MAAM,QAAQ;AAAA,cACd,cAAc,iDAAiD,YAAY;AAAA,YAC7E;AAAA,YACA,IAAI;AAAA,UACN;AAAA,QACF,CAAC;AAAA,MACH,CAAC;AAGD,YAAM,OAAO,aAAa,OAAO;AAAA,QAC/B,MAAM;AAAA,UACJ,MAAM,sBAAsB,eAAe,mBAAmB,eAAe;AAAA,UAC7E,UAAU;AAAA,YACR;AAAA,YACA;AAAA,UACF;AAAA,UACA,MAAM;AAAA,UACN,OAAO,GAAG,eAAe;AAAA,UACzB,MAAM;AAAA,UACN;AAAA,QACF;AAAA,MACF,CAAC;AAGD,YAAM,YAAY,0BAA0B;AAAA,QAC1C;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,MAAM,QAAQ;AAAA,MAChB,CAAC;AAED,YAAM,YAAY,0BAA0B;AAAA,QAC1C;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,MAAM,QAAQ;AAAA,QACd,cAAc,iDAAiD,YAAY;AAAA,MAC7E,CAAC;AAED,YAAM,GAAG,OAAO;AAAA,QACd,kCAAkC,eAAe;AAAA,MACnD;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA,QAAQ;AAAA,MACV;AAAA,IACF,SAAS,OAAO;AACd,YAAM,eACJ,iBAAiB,QAAQ,MAAM,UAAU,OAAO,KAAK;AACvD,YAAM,GAAG,OAAO;AAAA,QACd,yCAAyC,YAAY;AAAA,MACvD;AAEA,YAAM;AAAA,IACR;AAAA,EACF;AACF,CAAC;AAGD,SAAS,0BAA0B;AAAA,EACjC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAMW;AACT,SAAO;AAAA,QACD,IAAI;AAAA;AAAA,wCAE4B,eAAe,0BAA0B,YAAY,0CAA0C,eAAe;AAAA;AAAA;AAAA;AAAA,oCAIlH,YAAY,WAAW,iBAAiB,IAAI,MAAM,EAAE;AAAA;AAAA,sEAElB,eAAe;AAAA;AAAA;AAAA;AAIrF;AAGA,SAAS,0BAA0B;AAAA,EACjC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAOW;AACT,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAsBc,IAAI;AAAA;AAAA,+DAEoC,eAAe;AAAA,sBACxD,YAAY;AAAA,oCACE,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,2DAKQ,YAAY,WAAW,iBAAiB,IAAI,MAAM,EAAE;AAAA;AAAA,qFAE1B,eAAe;AAAA;AAAA;AAAA,uBAG7E,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWnC;",
  "names": []
}
